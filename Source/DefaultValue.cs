//Copyright (c) 2007. Clarius Consulting, Manas Technology Solutions, InSTEDD
//https://github.com/moq/moq4
//All rights reserved.

//Redistribution and use in source and binary forms, 
//with or without modification, are permitted provided 
//that the following conditions are met:

//    * Redistributions of source code must retain the 
//    above copyright notice, this list of conditions and 
//    the following disclaimer.

//    * Redistributions in binary form must reproduce 
//    the above copyright notice, this list of conditions 
//    and the following disclaimer in the documentation 
//    and/or other materials provided with the distribution.

//    * Neither the name of Clarius Consulting, Manas Technology Solutions or InSTEDD nor the 
//    names of its contributors may be used to endorse 
//    or promote products derived from this software 
//    without specific prior written permission.

//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
//CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
//INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
//MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
//CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
//SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
//BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
//SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
//INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
//WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
//NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
//SUCH DAMAGE.

//[This is the BSD license, see
// http://www.opensource.org/licenses/bsd-license.php]

using System.ComponentModel;

namespace Moq
{
	/// <summary>
	/// Determines the way default values are generated 
	/// calculated for loose mocks.
	/// </summary>
	public enum DefaultValue
	{
		/// <summary>
		/// Default behavior, which generates empty values for 
		/// value types (i.e. default(int)), empty array and 
		/// enumerables, and nulls for all other reference types.
		/// </summary>
		Empty,

		/// <summary>
		/// Whenever the default value generated by <see cref="Empty"/> 
		/// is null, replaces this value with a mock (if the type 
		/// can be mocked). 
		/// </summary>
		/// <remarks>
		/// For sealed classes, a null value will be generated.
		/// </remarks>
		Mock,

		/// <summary>
		///   <para>
		///     All default value generation strategies other than <see cref="Empty"/> or <see cref="Mock"/>
		///     are represented by this enumeration value.
		///   </para>
		///   <para>
		///     Do not set <see cref="Mock.DefaultValue"/> (nor <see cref="MockFactory.DefaultValue"/>) to this value.
		///     If you want to set up a custom default value generation strategy, set <see cref="Mock.DefaultValueProvider"/>
		///     or <see cref="MockFactory.DefaultValueProvider"/> instead.
		///   </para>
		/// </summary>
		/// <remarks>
		/// </remarks>
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		Custom
	}
}
